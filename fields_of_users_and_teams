User {
    email: string; contains email
    username: string; contains name
    skills: string array; skills such as languages and frameworks
    rating: int; rating value from other users
    prevTeams: object array; ids of teams you've been a part of {
        id: string; the database id of the team. Query using {_id:ObjectId([id])}
        name: string; the team's teamName
    }
    curTeams: object array; ids of teams you are part of {
        id: string; the database id of the team. Query using {_id:ObjectId([id])}
        name: string; the team's teamName
    }
    bio: string; contains human-readable information about the user
    blockedUsers: string array; list of ids of users that you have blocked
    blockedBy: string array; list of ids of users that have blocked me
    reviews: string array; list of reviews from other users about you
    invites: object array; {
        userid: user id who is invited
        teamid: the team id the user is invited to
    }
}

Team {
    teamName: string; contains team name
    teamMembers: object array; contains information about all team team members {
        id: objectID; the database id of the user. Query using {_id:ObjectId([id])}
        username: string; the user's screen name
    }
    owner: object; contains id and username of project owner (team creator) {
        id: objectID; the database id of the user. Query using {_id:ObjectId([id])}
        username: string; the user's screen name
    }
    info: string; contains notes about project ideas
    requestedSkills: string array; list of skills that the team is looking for
    numMembers: int; number of members in the team
    open: boolean; whether the team is open or restricted. true means open
    alive: boolean; whether the group is active or project has ended. true means active
    course: string; contains course name/num
    maxMembers: int; maximum number of members for the team
    reqReceived: string array of user id
}
